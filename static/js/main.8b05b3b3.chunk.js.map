{"version":3,"sources":["actions/userActions.js","components/Icon.js","components/Task.js","components/App.jsx","containers/AppContainer.js","reducers/tasksReducer.js","reducers/rootReducer.js","index.js"],"names":["DELETE_TASK","Icon","props","state","isMouseOverIcon","svgLogo","this","isMouseOverRow","isRowClicked","type","onClickIcon","height","viewBox","width","xmlns","d","data-name","className","onMouseEnter","setState","onMouseLeave","onClick","React","Component","Task","isClicked","isMouseOver","logo","task","index","handleDeleteTask","isLastTime","completeThe","withTxt","rowLeft","toLowerCase","person","notes","id","time","App","timeBlock","i","times","Object","values","map","idx","length","taskId","deleteTask","keys","userTasks","userTasksVals","userTasksTimes","timeBlocks","push","renderTimeBlock","connect","tasks","dispatch","predefinedState","1","completed","2","3","4","5","oldState","action","freeze","timeBlockCopy","assign","rootReducer","combineReducers","store","createStore","document","addEventListener","window","getState","ReactDOM","render","AppContainer","getElementById"],"mappings":"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","file":"static/js/main.8b05b3b3.chunk.js","sourcesContent":["// use constants incase there's a typo, we fail loudly\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const COMPLETE_TASK = \"COMPLETE_TASK\";\n\n\n// ACTION CREATORS\nexport const deleteTask = (taskId, time) => {\n\n  return ({\n    type: DELETE_TASK,\n    taskId, \n    time\n  });\n}","import React from 'react';\n\n\nclass Icon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // local state to track whether mouse is over icon\n    this.state = {\n      isMouseOverIcon: false\n    };\n  }\n\n\n  render() {\n    const { isMouseOverRow, isRowClicked, type, onClickIcon } = this.props;\n    const { isMouseOverIcon } = this.state;\n\n    // conditionally create <svg> logo icon based on type from props\n    let svgLogo;\n    if (type === \"delete\") {\n      svgLogo = (<svg height=\"15pt\" viewBox=\"0 0 329.26933 329\" width=\"15pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m194.800781 164.769531 128.210938-128.214843c8.34375-8.339844 8.34375-21.824219 0-30.164063-8.339844-8.339844-21.824219-8.339844-30.164063 0l-128.214844 128.214844-128.210937-128.214844c-8.34375-8.339844-21.824219-8.339844-30.164063 0-8.34375 8.339844-8.34375 21.824219 0 30.164063l128.210938 128.214843-128.210938 128.214844c-8.34375 8.339844-8.34375 21.824219 0 30.164063 4.15625 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921875-2.089844 15.082031-6.25l128.210937-128.214844 128.214844 128.214844c4.160156 4.160156 9.621094 6.25 15.082032 6.25 5.460937 0 10.921874-2.089844 15.082031-6.25 8.34375-8.339844 8.34375-21.824219 0-30.164063zm0 0\" /></svg>);\n\n    } else if (type === \"complete\") {\n      svgLogo = (<svg height=\"15pt\" viewBox=\"0 -46 417.81333 417\" width=\"15pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m159.988281 318.582031c-3.988281 4.011719-9.429687 6.25-15.082031 6.25s-11.09375-2.238281-15.082031-6.25l-120.449219-120.46875c-12.5-12.5-12.5-32.769531 0-45.246093l15.082031-15.085938c12.503907-12.5 32.75-12.5 45.25 0l75.199219 75.203125 203.199219-203.203125c12.503906-12.5 32.769531-12.5 45.25 0l15.082031 15.085938c12.5 12.5 12.5 32.765624 0 45.246093zm0 0\" /></svg>);\n\n    } else if (type === \"details\") {\n      svgLogo = (<svg \n        height=\"15pt\" width=\"15pt\" \n        data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" \n        viewBox=\"0 0 512 512\"\n        className={isMouseOverRow ? \"details-hovered\" : \"\"}\n        ><path d=\"M174.54,508.94,420.1,263.39a10.74,10.74,0,0,0,0-14.75L174.53,3.06a10.43,10.43,0,0,0-14.75,0L92,70.8a10.43,10.43,0,0,0,0,14.75L262.47,256,92,426.46a10.73,10.73,0,0,0,0,14.75l67.75,67.73A10.43,10.43,0,0,0,174.54,508.94Z\" /></svg>);\n    }\n\n    return (\n      <span\n        className={(isMouseOverRow || isRowClicked) ? type : type + \" hidden\"}\n        onMouseEnter={() => this.setState({ isMouseOverIcon: true })}\n        onMouseLeave={() => this.setState({ isMouseOverIcon: false })}\n        onClick={onClickIcon}\n      >\n        <span\n          className={(isRowClicked || isMouseOverIcon) ? (type === \"details\" ? \"circle hidden\" : \"circle\") : \"circle hidden\"}\n        >\n          {svgLogo}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default Icon;\n\n\n\n","import React from 'react';\nimport Icon from './Icon';\n\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // local state to track whether row has been clicked, and whether mouse is over row\n    this.state = {\n      isClicked: false,\n      isMouseOver: false,\n      isMouseOverIcon: false,\n    };\n  }\n\n\n  render() {\n\n    const { task, index, handleDeleteTask, isLastTime } = this.props;\n    // task == {id: 1, type: \"Call\", person: \"Avni Submaranian\", time: \"9:00 - 10:00a\", notes: \"Inbound NY\", …}\n    // debugger\n\n    let logo;\n    let completeThe = \"\";\n    let withTxt = \"\";\n    // if task type is \"Call\", insert phone logo\n    if (task.type === \"Call\") {\n      logo = (<svg height=\"15pt\" viewBox=\"0 0 511.99844 511\" width=\"15pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m493.132812 346.726562-49.878906-49.878906c-11.949218-11.949218-27.835937-18.527344-44.734375-18.527344-16.863281 0-32.730469 6.558594-44.671875 18.46875-.027344.027344-.050781.050782-.078125.078126-.007812.007812-.019531.019531-.027343.023437l-34.472657 34.476563-138.1875-138.191407 34.472657-34.46875c.082031-.082031.164062-.167969.242187-.25 11.824219-11.925781 18.332031-27.726562 18.332031-44.53125 0-16.898437-6.582031-32.785156-18.53125-44.734375l-49.90625-49.910156c-.121094-.125-.242187-.25-.367187-.375-11.941407-11.871094-27.78125-18.40625-44.621094-18.40625-16.820313 0-32.644531 6.519531-44.574219 18.367188-.136718.132812-.269531.265624-.402344.402343-21.0625 21.066407-44.125 44.125-44.757812 44.757813-32.359375 32.359375-39.644531 84.851562-20.515625 147.804687 18.148437 59.722657 58.230469 122.707031 112.867187 177.347657 76.03125 76.027343 168.582032 123.257812 241.546876 123.257812 34.46875 0 63.378906-10.6875 83.582031-30.894531.617187-.613281 23.71875-23.714844 44.804687-44.800781.121094-.121094.242188-.242188.363282-.363282 24.375-24.53125 24.457031-64.34375.195312-88.976562-.21875-.230469-.445312-.457032-.679688-.675782zm0 0\" /><path d=\"m352.523438 226.914062c2.929687 2.929688 6.765624 4.394532 10.605468 4.394532 3.835938 0 7.675782-1.464844 10.601563-4.394532l56.335937-56.328124 22.863282 22.859374c3.910156 3.914063 9.652343 5.351563 14.949218 3.75 5.292969-1.601562 9.277344-5.988281 10.359375-11.414062l33.46875-167.339844c.984375-4.917968-.554687-10-4.101562-13.546875-3.546875-3.546875-8.628907-5.082031-13.546875-4.101562l-167.335938 33.46875c-5.425781 1.085937-9.8125 5.070312-11.414062 10.363281-1.601563 5.292969-.160156 11.039062 3.75 14.953125l22.863281 22.859375-56.335937 56.324219c-2.8125 2.8125-4.390626 6.628906-4.394532 10.605469 0 3.980468 1.582032 7.792968 4.394532 10.605468zm0 0\" /></svg>);\n\n      // if task type is \"LinkedIn message\", insert phone logo\n    } else if (task.type === \"LinkedIn message\") {\n      logo = (<svg height=\"15pt\" viewBox=\"0 0 512 512\" width=\"15pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m475.074219 0h-438.148438c-20.394531 0-36.925781 16.53125-36.925781 36.925781v438.148438c0 20.394531 16.53125 36.925781 36.925781 36.925781h438.148438c20.394531 0 36.925781-16.53125 36.925781-36.925781v-438.148438c0-20.394531-16.53125-36.925781-36.925781-36.925781zm-293.464844 387h-62.347656v-187.574219h62.347656zm-31.171875-213.1875h-.40625c-20.921875 0-34.453125-14.402344-34.453125-32.402344 0-18.40625 13.945313-32.410156 35.273437-32.410156 21.328126 0 34.453126 14.003906 34.859376 32.410156 0 18-13.53125 32.402344-35.273438 32.402344zm255.984375 213.1875h-62.339844v-100.347656c0-25.21875-9.027343-42.417969-31.585937-42.417969-17.222656 0-27.480469 11.601563-31.988282 22.800781-1.648437 4.007813-2.050781 9.609375-2.050781 15.214844v104.75h-62.34375s.816407-169.976562 0-187.574219h62.34375v26.558594c8.285157-12.78125 23.109375-30.960937 56.1875-30.960937 41.019531 0 71.777344 26.808593 71.777344 84.421874zm0 0\" /></svg>);\n\n      // if task type is \"Manual task\", insert clip board logo\n    } else if (task.type === \"Manual task\") {\n      logo = (<svg height=\"15pt\" viewBox=\"-59 0 512 512\" width=\"15pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m344.675781 39.398438h-48.671875v-19.398438c0-11.046875-8.953125-20-20-20h-157.339844c-11.046874 0-20 8.953125-20 20v19.398438h-48.664062c-27.570312 0-50 22.429687-50 50v372.601562c0 27.570312 22.429688 50 50 50h294.675781c27.570313 0 50-22.429688 50-50v-372.601562c0-27.570313-22.433593-50-50-50zm-88.671875.601562v38.800781h-117.34375c0-13.292969 0-24.273437 0-38.800781zm98.671875 422c0 5.515625-4.488281 10-10 10h-294.675781c-5.515625 0-10-4.484375-10-10v-372.601562c0-5.511719 4.484375-10 10-10h48.660156v19.402343c0 11.046875 8.957032 20 20 20h157.34375c11.042969 0 20-8.953125 20-20v-19.402343h48.671875c5.511719 0 10 4.488281 10 10zm-64.535156-228.480469c7.8125 7.8125 7.8125 20.476563 0 28.285157l-105.101563 105.101562c-7.808593 7.8125-20.472656 7.8125-28.285156 0l-52.230468-52.230469c-7.808594-7.808593-7.808594-20.472656 0-28.285156 7.8125-7.808594 20.472656-7.808594 28.285156 0l38.089844 38.089844 90.957031-90.957031c7.8125-7.8125 20.472656-7.8125 28.285156-.003907zm0 0\" /></svg>);\n      completeThe = \"complete the\";\n      withTxt = \"with\";\n    }\n\n    const { isMouseOver, isClicked } = this.state;\n\n    let rowLeft;\n    if (isClicked) {\n      rowLeft = (\n        <div className=\"notes-on-click\">\n          Did you {completeThe} {task.type.toLowerCase()} {withTxt} {task.person}?\n        </div>\n      );\n\n    } else {\n      rowLeft = (\n        <>\n          <span className=\"logo\">{logo}</span>\n            <div className=\"notes-person\">\n              <div className=\"notes\">\n                {task.notes}\n              </div>\n              <div className=\"type-person\">\n                <span className=\"type\">{task.type}</span> {(task.type === \"Manual task\") ? <span className=\"with\">{\"with\"}</span> : \"\"} <span className=\"person\">{task.person}</span>\n              </div>\n            </div>\n        </>\n      );\n    }\n\n    return (\n      <>\n      <div className={isClicked ? \"left-arrow\" : \"left-arrow hidden\"}>\n        <svg\n          height=\"15pt\" width=\"15pt\"\n          data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 512 512\"\n          // className={isMouseOverRow ? \"details-hovered\" : \"\"}\n        ><path d=\"M174.54,508.94,420.1,263.39a10.74,10.74,0,0,0,0-14.75L174.53,3.06a10.43,10.43,0,0,0-14.75,0L92,70.8a10.43,10.43,0,0,0,0,14.75L262.47,256,92,426.46a10.73,10.73,0,0,0,0,14.75l67.75,67.73A10.43,10.43,0,0,0,174.54,508.94Z\" /></svg>\n      </div>\n\n      <div \n        className={isLastTime ? \"row last\" : (index === 0 ? \"row first\" : \"row\")} \n        id={isClicked ? \"clicked\" : \"not-clicked\"}\n        key={index}\n        onMouseEnter={() => this.setState({isMouseOver: true})}\n        onMouseLeave={() => this.setState({isMouseOver: false})}\n        onClick={() => this.setState({isClicked: !this.state.isClicked})}\n      >\n        {/* <div className={isClicked ? \"left-arrow\" : \"left-arrow hidden\"}>\n          <svg\n            height=\"15pt\" width=\"15pt\"\n            data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n            // className={isMouseOverRow ? \"details-hovered\" : \"\"}\n          ><path d=\"M174.54,508.94,420.1,263.39a10.74,10.74,0,0,0,0-14.75L174.53,3.06a10.43,10.43,0,0,0-14.75,0L92,70.8a10.43,10.43,0,0,0,0,14.75L262.47,256,92,426.46a10.73,10.73,0,0,0,0,14.75l67.75,67.73A10.43,10.43,0,0,0,174.54,508.94Z\" /></svg>\n        </div> */}\n\n        <div className=\"row-left\">\n          {rowLeft}\n        </div>\n        \n        <div className=\"row-right\">\n          <Icon \n            isMouseOverRow={isMouseOver}\n            isRowClicked={isClicked} \n            type=\"delete\"\n            // onClick={() => handleDeleteTask(task.id, task.time)}\n            />\n\n          <Icon \n            isMouseOverRow={isMouseOver}\n            isRowClicked={isClicked} \n            type=\"complete\"\n            onClickIcon={() => handleDeleteTask(task.id, task.time)}\n          />\n\n          <Icon \n            isMouseOverRow={isMouseOver}\n            isRowClicked={isClicked} \n            type=\"details\"\n          />\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\n\nexport default Task;\n","import React from 'react';\nimport Task from './Task';\n\n\nclass App extends React.Component {\n\n  // renders a div (for a certain timeperiod) that contains rows of tasks\n  renderTimeBlock(timeBlock, i, time) {\n    // timeBlock == { {0:{}, 1:{}, ... }\n\n    // Render Rows\n    let times = Object.values(timeBlock).map( (task, idx) => {\n\n      // task == {id: 1, type: \"Call\", person: \"Avni Submaranian\", time: \"9:00 - 10:00a\", notes: \"Inbound NY\", …}\n      let isLastTime = (Object.values(timeBlock).length - 1) === idx;\n\n      return (\n        <Task \n          task={task} \n          key={idx} \n          index={idx} \n          isLastTime={isLastTime}\n          handleDeleteTask={(taskId, time) => this.props.deleteTask(taskId, time)}/>\n      );\n    });\n\n    // if timeblock is empty, there are no times for that block, so exit\n    if (Object.keys(timeBlock) === 0) return null;\n\n    return (\n      <div className=\"time-block-wrap\" key={i}>\n        <div className=\"time\" key={i}>\n          {time}\n        </div>\n\n        <div \n          className=\"time-block\" \n          key={i + 1}\n        >\n          {times}\n        </div>\n      </div>\n    );\n  }\n\n\n  render() {\n\n    // destructure tasks from store\n    const { userTasks } = this.props;\n\n    // break tasks into different time blocks (ex. 9-10am, 11-12pm)\n    let userTasksVals = Object.values(userTasks);\n    // userTasksVals == [ {0:{}, 1:{},...}, {4:{}, 5:{}} ]\n\n    let userTasksTimes = Object.keys(userTasks);\n    // userTasksTimes == [ \"9:00 - 10:00a\", \"11:15a - 12:00p\" ]\n\n    // will contain divs (that correspond to different time blocks)\n    let timeBlocks = [];\n\n    // loop over time blocks\n    for (let i = 0; i < userTasksVals.length; i++) {\n      let timeBlock = userTasksVals[i];\n      let time = userTasksTimes[i];\n\n      // render div time block that contains rows of tasks\n      timeBlocks.push(this.renderTimeBlock(timeBlock, i, time));\n    }\n\n    return (\n      <div className=\"App-wrap\">\n        <div className=\"App\">\n          {timeBlocks}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { deleteTask } from '../actions/userActions';\nimport App from '../components/App';\n\n\n\n// give app component acceess to tasks in store\nconst mapStateToProps = state => {\n  // console.log(state);\n  // state.tasks == { 9:00-10:00a:{ {}, {} }, 11-12p:{ {}, {} } } \n\n  return ({\n    userTasks: state.tasks\n  });\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return({\n    deleteTask: (taskId, time) => dispatch(deleteTask(taskId, time))\n  });\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { DELETE_TASK, COMPLETE_TASK } from '../actions/userActions';\n// import { merge } from 'lodash';\n\n// prepopulated store with 5 tasks\nconst predefinedState = {\n  \"9:00 - 10:00a\": {\n    1: {\n      id: 1,\n      type: \"Call\", \t                      // can be \"CALL\" or \"MANUAL\", or \"LI\" (linked in message)\n      person: \"Avni Submaranian\",\n      time: \"9:00 - 10:00a\",\n      notes: \"Inbound NY\",\n      completed: false\n    },\n    2: {\n      id: 2,\n      type: \"Manual task\", \t                      \n      person: \"Malik Simpson\",\n      time: \"9:00 - 10:00a\",\n      notes: \"Rekindling ancient embers\",\n      completed: false\n    },\n    3: {\n      id: 3,\n      type: \"Call\", \t                      \n      person: \"Jabroni F. Myers\",\n      time: \"9:00 - 10:00a\",\n      notes: \"Shaming bottom-feeders\",\n      completed: false\n    },\n  },\n  \"11:15a - 12:00p\": {\n    4: {\n      id: 4,\n      type: \"LinkedIn message\", \t                      \n      person: \"Yvette Mok\",\n      time: \"11:15a - 12:00p\",\n      notes: \"Ignore and solicit on\",\n      completed: false\n    },\n    5: {\n      id: 5,\n      type: \"Manual task\", \t                  \n      person: \"Xavier St. D'Augustine\",\n      time: \"11:15a - 12:00p\",\n      notes: \"Ignore and solicit on\",\n      completed: false\n    },\n  }\n};\n\n\n// set default state to null if not passed in\nconst tasks = (oldState = predefinedState, action) => {\n\n  // prevent us from accidentally mutating state\n  Object.freeze(oldState);\n\n  let newState;\n  switch (action.type) {\n\n    case DELETE_TASK:\n      // action == { type: \"DELETE_TASK\", taskId: 4, time: \"11:15a - 12:00p\" }\n\n      // copy timeBlock\n      let timeBlockCopy = Object.assign({}, oldState[action.time]);\n\n      // delete obj from timeblock based off of taskId\n      delete timeBlockCopy[action.taskId];\n\n      // update newState\n      newState = Object.assign({}, oldState, {\n        [action.time]: timeBlockCopy\n      });\n\n      return newState;\n\n    default:\n      return oldState;\n  }\n}\n\nexport default tasks;","import { combineReducers } from 'redux';\nimport tasks from './tasksReducer';\n\nconst rootReducer = combineReducers({\n\n  // same as tasks: tasks\n  tasks,                            \n});\n\nexport default rootReducer;\n\n// EXAMPLE REDUX STORE:\n// {\n//   \"9:00 - 10:00a\": {\n//     1: {\n//       id: 1,\n//       type: \"Call\", \t                      // can be \"CALL\" or \"MANUAL\", or \"LI\" (linked in message)\n//       person: \"Avni Submaranian\",\n//       time: \"9:00 - 10:00a\",\n//       notes: \"Inbound NY\",\n//       completed: false\n//     },\n//     2: {\n//       id: 2,\n//       type: \"Manual task\",\n//       person: \"Malik Simpson\",\n//       time: \"9:00 - 10:00a\",\n//       notes: \"Rekindling ancient members\",\n//       completed: false\n//     },\n//     3: {\n//       id: 3,\n//       type: \"Call\",\n//       person: \"Jabroni F. Myers\",\n//       time: \"9:00 - 10:00a\",\n//       notes: \"Shaming bottom-feeders\",\n//       completed: false\n//     },\n//   },\n//   \"11:15a - 12:00p\": {\n//     4: {\n//       id: 4,\n//       type: \"LinkedIn message\",\n//       person: \"Yvette Mok\",\n//       time: \"11:15a - 12:00p\",\n//       notes: \"Ignore and solicit on\",\n//       completed: false\n//     },\n//     5: {\n//       id: 5,\n//       type: \"Manual task\",\n//       person: \"Xavier St. D'Augustine\",\n//       time: \"11:15a - 12:00p\",\n//       notes: \"Ignore and solicit on\",\n//       completed: false\n//     },\n//   }\n// };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './containers/AppContainer';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\n// ENTRY POINT FILE\n\n// create redux store\nconst store = createStore(rootReducer);\n\n// wait for DOM to load, then render components\ndocument.addEventListener('DOMContentLoaded', () => {\n\n  // FOR TESTING\n  // ********************************\n  window.getState = store.getState;\n  window.dispatch = store.dispatch;\n  // console.log(store.getState());\n  // ********************************\n\n  // Provider allows App component access to redux store\n  // grab html element by id = root, and render App Component\n  ReactDOM.render(\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>,\n    document.getElementById('root')\n  );\n});\n"],"sourceRoot":""}